int i=1;
int j = 7 ;
float f = 7.2 ;
float fi = 7 ;
string name="hello world!" ;
int timer = 1000;
bool b1 = false ;
bool b2 = true ;

/*

@ logic\gameLogic2.llscript

用来演示的脚本样例：
当期可支持的类型有以上和void；
方法书写规范如下；
*/

//if
void AddTimer ( )
{
	//if表达式：当参数都为false时，没有最后的else会进入死循环。
	if(b1)
	{
		timer = timer + 1 ;
	}
	else if(b1)
	{
		timer = timer  - 1 ;
	}
	else
	{
	}
	timer = timer  - 1 ;
}

//while
void MakeTimerTo600()
{
	while(timer>600)
	{
		timer=timer-1;
		//b2 = b1;
	}
}

//函数调用
float GetTimer()
{
	AddTimer() ;
	return timer ;
}

//int类型的运算
void AddI ( )
{
	int i = 0 ;
	i = i + 12 ;
	i = j * i ;
}

//int类型的运算
void AddI2 ( )
{
	i = i + 12 ;
	i = j * i ;
}

//int
int GetI ( )
{
	return i ;
}

//字符串相加
void AddS()
{
	name=name+"byllscript";
}

//变量和方法相加
string GetS ( )
{
	return name + GetTimer();
}

//bool
bool GetB1 ( )
{
	return b1 ;
}

//bool
bool GetB2 ( )
{
	return b2 ;
}

//bool类型的运算
bool GetB3 ( )
{
	bool b3 = b1 & b2 ;
	//b3 = b1 | b2 ;
	return b1 | b2 ;
}

class Position
{
	int x = 0;
	int y = 0;
}

class UserData
{
	Position currentPosition;
	
	void SetPosition()
	{
		currentPosition.x=90;
		currentPosition.y=20;
	}
}

//自定义类
Position GetUserPosition()
{
	Position p1;
	Position p2;
	//p1.x=10;
	//p2.x=20-8;
	//p2.y = p1.x;
	
	UserData ud;
	//ud.currentPosition.x=4;
	ud.SetPosition();
	
	return ud;
}

//类拷贝
Position GetUserP()
{
	UserData ud;
	ud.SetPosition();
	Position p = ud.currentPosition;
	return p;
}

//return后使用.字符
int GetUserPX()
{
	UserData ud;
	ud.SetPosition();
	Position p = ud.currentPosition;
	return p.x;
}

void SetInputValue(int y,float f)
{
	timer=y*f;
}

//传入参数
int GetInputValue()
{
	SetInputValue(12,34);
	return timer;
}